1) sudo apt install openjdk-11-jdk   -> The purpose of this command is to install the OpenJDK 11 development kit on your system.
2) sudo useradd -r -m -U -d /opt/tomcat -s /bin/false tomcat   -> Creates the user account "tomcat."
                                                                  Creates the home directory /opt/tomcat if it doesn't exist.
                                                                  Sets the login shell to /bin/false.
                                                                  Adds the user to a group with the same name as the user (due to the -U option).
                                                                  -r: This option creates a system account, 
                                                                  -m: This option creates a home directory for the new user account.
                                                                  -U: This option creates a group with the same name as the user and adds the user to that group. 
                                                                  -d /opt/tomcat: This option specifies the home directory for the new user, 
                                                                  -s /bin/false: This option sets the login shell for the user to /bin/false
                                                                  tomcat: This is the username of the new user being created.

3) wget -c https://downloads.apache.org/tomcat/tomcat-9/v9.0.84/bin/apache-tomcat-9.0.84.tar.gz   -> The purpose of this command is to download the Apache Tomcat 9.0.84 distribution file from the specified URL. 
                                                                                                      wget: This is a command-line utility for downloading files from the web. 
                                                                                                      -c: This option, short for --continue, is used to resume an interrupted download. If the file already exists and is incomplete, wget will attempt to continue downloading it.
4) sudo tar xf apache-tomcat-9.0.84.tar.gz -C /opt/tomcat  -> xf: These are options used with the tar command. x stands for extract, and f specifies that the next argument is the name of the archive file to extract.
                                                              apache-tomcat-9.0.84.tar.gz: This is the name of the archive file that you want to extract
                                                              -C /opt/tomcat: This option specifies the directory where the contents of the archive should be extracted. In this case, it's set to /opt/tomcat.
5) sudo ln -s /opt/tomcat/apache-tomcat-9.0.84 /opt/tomcat/updated   -> ln: This command is used to create links between files. 
                                                                        -s: This option stands for "symbolic." It specifies that the link to be created is a symbolic link.
                                                                        /opt/tomcat/apache-tomcat-9.0.84: This is the source directory or file to which the link will point
                                                                        /opt/tomcat/updated: This is the destination path where the symbolic link will be created.
                                                                        you should make sure that the destination path (/opt/tomcat/updated) does not exist before running the command. 
                                                                        If, for some reason, the /opt/tomcat/updated path already exists as a directory or file, the ln command will not overwrite it. Instead, it will likely result in an error. 
6) sudo chown -R tomcat: /opt/tomcat/*  -> chown: This command is used to change the owner and group of files or directories in Unix-like systems.
                                          -R: This option stands for "recursive" and is used to change the ownership of the specified directory and its contents recursively.
                                          tomcat:: The colon (:) without specifying a group after it implies that the default group of the user "tomcat" will be used.
                                          The /* at the end of the path ensures that only the contents of the directory are targeted, not the directory itself.
7) sudo sh -c 'chmod +x /opt/tomcat/updated/bin/*.sh'  -> Run a shell command using sh. The command within single quotes (') is to make all shell script files (*.sh) 
                                                          sh -c command involves launching a subshell (sh -c) to execute the chmod command. The subshell is then run with elevated privileges using sudo.

                                                          sudo  chmod +x /opt/tomcat/updated/bin/*.sh
                                                          sudo sh -c 'chmod +x /opt/tomcat/updated/bin/*.sh'
                                                          
                                                          The first command directly invokes chmod with sudo to set execute permissions on the specified files.
                                                          The second command involves launching a subshell (sh -c) to execute the chmod command. The subshell is then run with elevated privileges using sudo.
                                                          In this specific case, both commands achieve the same result, and you can choose the one that you find more readable or convenient.
                                                          The use of sh -c might be more relevant when the command being executed is more complex or involves multiple commands. In this case, where only a single chmod command is used, the first command is more concise.
8) sudo vi /etc/systemd/system/tomcat.service  -> Editing the systemd service file (tomcat.service) allows you to configure how the Tomcat service is managed by the systemd init system. 

[Unit]
Description=Apache Tomcat Web Application Container
After=network.target

[Service]
Type=forking

Environment="JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64"
Environment="CATALINA_PID=/opt/tomcat/updated/temp/tomcat.pid"
Environment="CATALINA_HOME=/opt/tomcat/updated/"
Environment="CATALINA_BASE=/opt/tomcat/updated/"
Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
Environment="JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"

ExecStart=/opt/tomcat/updated/bin/startup.sh
ExecStop=/opt/tomcat/updated/bin/shutdown.sh

User=tomcat
Group=tomcat
UMask=0007
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target


9) sudo systemctl daemon-reload  -> systemctl: A command-line tool used to control the systemd system and service manager.
                                    daemon-reload: This is a subcommand of systemctl. It instructs systemd to reload its configuration files and recreate its internal dependency tree.
                                    The primary purpose of sudo systemctl daemon-reload is to inform systemd about any changes made to the unit files or other configuration files. 
                                    After making modifications to systemd service files or related configuration, running daemon-reload is necessary to apply those changes without restarting the system.

                                    When to Use:
                                    After making changes to systemd service files (e.g., creating or modifying a service definition), it's a good practice to run sudo systemctl daemon-reload to apply those changes without needing to reboot the system.
10) sudo systemctl start tomcat  -> systemctl: A command-line tool used to control the systemd system and service manager.
                                    start: This is a subcommand of systemctl. It is used to start a systemd service.
                                    tomcat: The name of the systemd service unit. In this case, it refers to the Tomcat service.
11) sudo vi /opt/tomcat/updated/conf/tomcat-users.xml

<tomcat-users>

<!--Comments-->
<role rolename="admin-gui"/>
<role rolename="manager-gui"/>
<user username="tomcat" password="tomcat" roles="admin-gui,manager-gui"/>

</tomcat-users>

12) sudo vi /opt/tomcat/updated/conf/server.xml

connector port 8090  --- to change access port number

13) sudo vi /opt/tomcat/updated/webapps/manager/META-INF/context.xml

<ContextantiResourceLocking="false" privileged="true" >

. . .
(comment this part)
<!--
<Valve className="org.apache.catalina.valves.RemoteAddrValve"
allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
-->

. . .

</Context>

14) sudo vi /opt/tomcat/updated/webapps/host-manager/META-INF/context.xml

<ContextantiResourceLocking="false" privileged="true" >

. . .
(comment this part)
<!--
<Valve className="org.apache.catalina.valves.RemoteAddrValve"
allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
-->

. . .

</Context>

15) systemctl restart tomcat
16)
rupasree@rupasree:~$ rupasree@rupasree:~$ sudo passwd tomcat
New password:
Retype new password:
passwd: password updated successfully
